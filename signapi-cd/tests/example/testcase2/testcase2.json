{
	"info": {
		"_postman_id": "98038dc6-8da4-4b54-8cc5-f8cf7b225e7b",
		"name": "testcase1 (newman_test)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "RequestAccessToken Introspect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"TX_introspect_token\", jsonData.access_token);\r",
							"\r",
							"pm.test(\"Tests veiksmīgs\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{client_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"description": "Grant used to receive the token (in our case it is client_credenties because it is a system to system authentication)",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "urn:safelayer:eidas:oauth:token:introspect",
							"description": "Required scope for system to system authentication. ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{api_server}}/trustedx-authserver/oauth/{{as}}/token",
					"protocol": "https",
					"host": [
						"{{api_server}}"
					],
					"path": [
						"trustedx-authserver",
						"oauth",
						"{{as}}",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"SignAPI_session_id\", jsonData.data.sessionId);\r",
							"\r",
							"pm.test(\"Tests veiksmīgs\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TX_introspect_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{SignAPI_server}}/api-session/v1.0/start",
					"protocol": "https",
					"host": [
						"{{SignAPI_server}}"
					],
					"path": [
						"api-session",
						"v1.0",
						"start"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"SignAPI_file_id\", jsonData.data.id);\r",
							"\r",
							"pm.test(\"Tests veiksmīgs\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TX_introspect_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "TEST_DOC.txt"
						}
					]
				},
				"url": {
					"raw": "https://{{SignAPI_server}}/api-storage/v1.0/{{SignAPI_session_id}}/upload",
					"protocol": "https",
					"host": [
						"{{SignAPI_server}}"
					],
					"path": [
						"api-storage",
						"v1.0",
						"{{SignAPI_session_id}}",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "Close",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TX_introspect_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"description": "Token Authorization header using Bearer scheme. Example: \"Authorization: Bearer {token}\"",
						"key": "Authorization",
						"value": "",
						"disabled": true
					},
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{SignAPI_server}}/api-session/v1.0/{{SignAPI_session_id}}/close",
					"protocol": "https",
					"host": [
						"{{SignAPI_server}}"
					],
					"path": [
						"api-session",
						"v1.0",
						"{{SignAPI_session_id}}",
						"close"
					]
				},
				"description": "Closes a session. \n\nSessionID must be present in order to close an session.\n\nBearer token must be present in order to authenticate against API. "
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Token Authorization header using Bearer scheme. Example: \"Authorization: Bearer {token}\"",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1.0/<string>/close",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1.0",
								"<string>",
								"close"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"data\": {\n  \"sessionId\": \"<string>\",\n  \"documents\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"size\": \"<long>\",\n    \"isSigningResult\": \"<boolean>\",\n    \"isIncluded\": \"<boolean>\",\n    \"isCompleted\": \"<boolean>\",\n    \"tomcatSession\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"size\": \"<long>\",\n    \"isSigningResult\": \"<boolean>\",\n    \"isIncluded\": \"<boolean>\",\n    \"isCompleted\": \"<boolean>\",\n    \"tomcatSession\": \"<string>\"\n   }\n  ]\n },\n \"error\": {\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"target\": \"<string>\",\n  \"details\": [\n   {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\",\n    \"target\": \"<string>\"\n   },\n   {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\",\n    \"target\": \"<string>\"\n   }\n  ],\n  \"innerError\": \"schema type not provided\"\n }\n}"
				}
			]
		}
	]
}